import * as Redux from 'redux';
global.Redux = Redux;

import React from 'react';
global.React = React;

import * as ReactNative from 'react-native';
global.ReactNative = ReactNative;

// make React Native API accessible
global.Platform = ReactNative.Platform;

// make React Native Components accessible
// feel free to comment out those that are not needed

// iOS + android
global.ActivityIndicator = ReactNative.ActivityIndicator;
global.Button = ReactNative.Button;
global.FlatList = ReactNative.FlatList;
global.Image = ReactNative.Image;
global.ImageBackGround = ReactNative.ImageBackground;
global.KeyboardAvoidingView = ReactNative.KeyboardAvoidingView; // limited for web
global.Modal = ReactNative.Modal; // not available for web
global.Picker = ReactNative.Picker;
global.RefreshControl = ReactNative.RefreshControl; // not available for web
global.ScrollView = ReactNative.ScrollView;
global.SectionList = ReactNative.SectionList;
global.StatusBar = ReactNative.StatusBar; // limited for web
global.InputSwitch = ReactNative.Switch; // <-- not to be confused with React Router Switch below
global.Text = ReactNative.Text;
global.TextInput = ReactNative.TextInput;
global.Touchable = ReactNative.Touchable;
global.TouchableHighlight = ReactNative.TouchableHighlight;
global.TouchableOpacity = ReactNative.TouchableOpacity;
// global.TouchableWithoutFeedback = ReactNative.TouchableWithoutFeedback;
global.View = ReactNative.View;
global.VirtualizedList = ReactNative.VirtualizedList;

// iOS only
// global.InputAccessoryView = ReactNative.InputAccessoryView;
// global.ProgressViewIOS = ReactNative.ProgressViewIOS;
global.SafeAreaView = ReactNative.SafeAreaView;

// android only
// global.DrawerLayoutAndroid = ReactNative.DrawerLayoutAndroid;
// global.ProgressBarAndroid = ReactNative.ProgressBarAndroid;
// global.TouchableNativeFeedback = ReactNative.TouchableNativeFeedback;

// make other commonly used components available, these are not available for web
// https://github.com/react-native-community/datetimepicker
import DateTimePicker from '@react-native-community/datetimepicker';
global.DateTimePicker = DateTimePicker;
// https://github.com/react-native-community/react-native-slider
import Slider from '@react-native-community/slider';
global.Slider = Slider;
// https://github.com/react-native-community/react-native-viewpager
import ViewPager from '@react-native-community/viewpager';
global.ViewPager = ViewPager;
// https://github.com/react-native-community/react-native-svg
import * as ReactNativeSvg from 'react-native-svg';
global.ReactNativeSvg = ReactNativeSvg;

// support hot reloading
import deepForceUpdate from 'react-deep-force-update';
global.deepForceUpdate = deepForceUpdate;

// import npm modules that are valid to use only in the browser
import { NativeRouter, Link, NavLink, Route, Switch } from 'react-router-native';
// global.History = History;
global.Router = NativeRouter;
global.Link = Link;
global.NavLink = NavLink;
global.Route = Route;
global.Switch = Switch;

global.DefaultTheme = ReactNative.StyleSheet.create({
    b: {
      fontWeight: 'bold'
    },
    code: {
      fontFamily: 'Courier, monospace'
    },
    div: {
        flexDirection: 'column',
    },
    h1: {
        fontSize: 26,
        fontWeight: 'bold',
    },
    h2: {
        fontSize: 22,
        fontWeight: 'bold'
    },
    h3: {
        fontSize: 18,
        fontWeight: 'bold'
    },
    h4: {
        fontSize: 16
    },
    h5: {
        fontSize: 14
    },
    h6: {
        fontSize: 12
    },
    i: {
        fontStyle: 'italic'
    },
    p: {
        flexDirection: 'row',
        marginTop: 10
    },
    pre: {
        fontFamily: 'Courier, monospace'
    },
    span: {
    },
    u: {
        textDecorationLine: 'underline'
    }
});

global.ThemeContext = React.createContext(global.DefaultTheme);

import init_app from 'native_loader.rb';
init_app();
Opal.load('native_loader');

if (__DEV__) { Opal.Isomorfeus['$env=']('development'); }
else { Opal.Isomorfeus['$env=']('production'); }

const App = function() {
  return Opal.React.$create_element('<%= app_class %>'.$constantize());
};

export default App;
